// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAHGcX8VeSr6FTRRORuJSngA3gEZnyD0es',
    appId: '1:536261010133:android:3ef6894695c2794460785c',
    messagingSenderId: '536261010133',
    projectId: 'zaafer-mobile',
    storageBucket: 'zaafer-mobile.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyByOo8A5g5jtkKcQLbvg39ccArbiXKSq2E',
    appId: '1:536261010133:ios:a77338e675fc3cec60785c',
    messagingSenderId: '536261010133',
    projectId: 'zaafer-mobile',
    storageBucket: 'zaafer-mobile.appspot.com',
    iosBundleId: 'com.example.zaaferMobileApp',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyByOo8A5g5jtkKcQLbvg39ccArbiXKSq2E',
    appId: '1:536261010133:ios:562c3ab0420b8fb360785c',
    messagingSenderId: '536261010133',
    projectId: 'zaafer-mobile',
    storageBucket: 'zaafer-mobile.appspot.com',
    iosBundleId: 'com.example.zaaferMobileApp.RunnerTests',
  );

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyC68ZaKswoRLWmJkkhIABZOBNNqW0ZP0og',
    appId: '1:536261010133:web:008e107c49c8d45f60785c',
    messagingSenderId: '536261010133',
    projectId: 'zaafer-mobile',
    authDomain: 'zaafer-mobile.firebaseapp.com',
    storageBucket: 'zaafer-mobile.appspot.com',
    measurementId: 'G-8ZQT1YS8P8',
  );

  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
}
